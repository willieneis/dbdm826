#!/usr/bin/env python
import sys

def zorder(x,y):
    xbin = bin(x)[2:].zfill(max(len(bin(x)[2:]),len(bin(y)[2:])))
    ybin = bin(y)[2:].zfill(max(len(bin(x)[2:]),len(bin(y)[2:])))
    return int(''.join([i+j for i,j in zip(xbin,ybin)]),2)

def izorder(d):
    nbin = bin(d)[2:]
    nbin = nbin.zfill(len(nbin) if len(nbin)%2==0 else len(nbin)+1)
    return tuple([int(''.join([nbin[j+i] for i in range(0,len(nbin),2)]),2) for j in range(2)])

def rot(n,x,y,rx,ry):
    if ry == 0:
        if rx == 1:
            x = n - 1 - x
            y = n - 1 - y
        return y, x
    return x, y

def horder(n,x,y):
    d=0
    s = n/2
    while (s > 0):
        rx = (x & s) > 0
        ry = (y & s) > 0
        d += s * s * ((3 * rx) ^ ry)
        x, y = rot(s,x,y,rx,ry)
        s /= 2
    return d;

def ihorder(n,d):
    t = d
    x = y = 0
    s = 1
    while (s < n):
        rx = 1 & (t / 2)
        ry = 1 & (t ^ rx)
        x, y = rot(s,x,y,rx,ry)
        x += s * rx
        y += s * ry
        t /= 4
        s *= 2
    return x, y

def parseArgs(line):
    if line[0]=='zorder':
        print(zorder(int(line[3]),int(line[4])))
    elif line[0]=='izorder':
        print(str(izorder(int(line[3])))[1:-1].replace(', ',' '))
    elif line[0]=='horder':
        print(horder(2**int(line[2]),int(line[3]),int(line[4])))
    elif line[0]=='ihorder':
        print(str(ihorder(2**int(line[2]),int(line[3])))[1:-1].replace(', ',' '))

# script
if len(sys.argv) > 1:
    parseArgs(sys.argv[1:])
else:
    for line in sys.stdin:
        if len(line.strip().split())>1:
            parseArgs(line.strip().split())
