#!/usr/bin/env python
import sys

def part1by1(n):
        n&= 0x0000ffff
        n = (n | (n << 8)) & 0x00FF00FF
        n = (n | (n << 4)) & 0x0F0F0F0F
        n = (n | (n << 2)) & 0x33333333
        n = (n | (n << 1)) & 0x55555555
        return n

def unpart1by1(n):
        n&= 0x55555555
        n = (n ^ (n >> 1)) & 0x33333333
        n = (n ^ (n >> 2)) & 0x0f0f0f0f
        n = (n ^ (n >> 4)) & 0x00ff00ff
        n = (n ^ (n >> 8)) & 0x0000ffff
        return n

def zorder(x,y):
        return part1by1(x) | (part1by1(y) << 1)

def izorder(n):
        return unpart1by1(n), unpart1by1(n >> 1)

def horder(x,y): pass

def ihorder(n): pass

def parseArgs(line):
    if line[0]=='zorder':
        print(zorder(int(line[3]),int(line[4])))
    elif line[0]=='izorder':
        print(str(izorder(int(line[3])))[1:-1].replace(', ',' '))
    elif line[0]=='horder':
        print('horder')
        #print(horder(int(line[3]),int(line[4])))
    elif line[0]=='ihorder':
        print('ihorder')
        #print(ihorder(int(line[4])))

# script
if len(sys.argv) > 1:
    parseArgs(sys.argv[1:])
else:
    for line in sys.stdin:
        if len(line.strip().split())>1:
            parseArgs(line.strip().split())
